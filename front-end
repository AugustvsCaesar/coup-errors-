import { JsonRpcProvider } from 'ethers';
import { getDefaultProvider, Network } from "@lens-network/sdk/ethers";
import { ethers } from "ethers";
// src/main.tsx
import { ThirdwebProvider } from "thirdweb/react";

function Main() {
  return (
    <ThirdwebProvider>
      <App />
    </ThirdwebProvider>
  );
}

// src/app.tsx
import { client } from "./client";
import { ConnectButton } from "thirdweb/react";

function App() {
  return (
    <div>
      <ConnectButton client={client} />
    </div>
  );
}
import { useActiveAccount, useWalletBalance } from "thirdweb/react";

export default function App() {
  const account = useActiveAccount();
  const { data: balance, isLoading } = useWalletBalance({
    client,
    chain,
    address: account.address,
  });

  return (
    <div>
      <p>Wallet address: {account.address}</p>
      <p>
        Wallet balance: {balance?.displayValue} {balance?.symbol}
      </p>
    </div>
  );
}

import { client } from "./client";
import { getContract } from "thirdweb";
import { sepolia } from "thirdweb/chains";
import { useReadContract } from "thirdweb/react";

const contract = getContract({
  client,
  address: "0x...",
  chain: sepolia,
});

export default function App() {
  const { data, isLoading } = useReadContract({
    contract,
    method: "function tokenURI(uint256 tokenId) returns (string)",
    params: [1n], // type safe params
  });

  return (
    <div>
      <p>Token URI: {data}</p>
    </div>
  );
}

import { client } from "./client";
import { getContract } from "thirdweb";
import { sepolia } from "thirdweb/chains";
import { useReadContract } from "thirdweb/react";
import { getOwnedNFTs } from "thirdweb/extensions/erc721";

const contract = getContract({
  client,
  address: "0x...",
  chain: sepolia,
});

export default function App() {
  const { data: ownedNFTs } = useReadContract(getOwnedNFTs, {
    contract,
    address: "0x...",
  });

  return (
    <div>
      <p>Owned NFTs: {ownedNFTs}</p>
    </div>
  );
}

// Connect to the Ethereum network
const provider = new JsonRpcProvider("https://lens-sepolia.g.alchemy.com/v2/08O747QY_FATMPHKp288jtVdC4v77wMm");

// Get block by number
const blockNumber = "latest";
const block = await provider.getBlock(blockNumber);

console.log(block);

// Lens Network (L2)
export const lensProvider = getDefaultProvider(Network.Testnet);

// Ethereum L1
export const ethProvider = ethers.getDefaultProvider("sepolia");
