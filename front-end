import { JsonRpcProvider } from 'ethers';
import { getDefaultProvider, Network } from "@lens-network/sdk/ethers";
import { ethers } from "ethers";
import '@rainbow-me/rainbow-button/styles.css';
// src/web3Config.js
import { createClient, configureChains, defaultChains } from 'wagmi';
import { publicProvider } from 'wagmi/providers/public';
import { WalletConnectConnector } from 'wagmi/connectors/walletConnect';
import { RainbowKitProvider, darkTheme } from '@rainbow-me/rainbowkit';
import '@rainbow-me/rainbowkit/styles.css';

import { WagmiConfig, createConfig, mainnet } from 'wagmi'
import { createPublicClient, http } from 'viem'

const config = createConfig({
  autoConnect: true,
  publicClient: createPublicClient({
    chain: mainnet,
    transport: http()
  }),
})

function App() {
  return (
    <WagmiConfig config={config}>
      <Profile />
    </WagmiConfig>
  )
}

// Configure chains and providers
const { chains, publicClient } = configureChains(defaultChains, [publicProvider()]);

// Configure WalletConnect
const walletConnectConnector = new WalletConnectConnector({
  chains,
  options: {
    qrcode: true, // Use QR code for connection
  },
});

// Create Wagmi client
const config = createConfig({
  autoConnect: true,
  connectors: [walletConnectConnector],
  publicClient,
});

export { chains, config, RainbowKitProvider, darkTheme };

// Connect to the Ethereum network
const provider = new JsonRpcProvider("https://lens-sepolia.g.alchemy.com/v2/08O747QY_FATMPHKp288jtVdC4v77wMm");

// Get block by number
const blockNumber = "latest";
const block = await provider.getBlock(blockNumber);

console.log(block);

// Lens Network (L2)
export const lensProvider = getDefaultProvider(Network.Testnet);

// Ethereum L1
export const ethProvider = ethers.getDefaultProvider("sepolia");
